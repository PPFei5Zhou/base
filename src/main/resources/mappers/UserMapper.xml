<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.easy.base.repository.mapper.UserMapper">
    <resultMap id="user" type="com.easy.base.domain.dao.UserInfoDAO">
        <id property="id" column="user_ID"/>
        <result property="userName" column="user_UserName"/>
        <result property="userAccount" column="user_UserAccount"/>
        <result property="password" column="user_Password"/>
        <result property="valid" column="user_Valid"/>
        <result property="createBy" column="user_CreateBy"/>
        <result property="createDt" column="user_CreateDt"/>
        <result property="updateBy" column="user_UpdateBy"/>
        <result property="updateDt" column="user_UpdateDt"/>
        <collection property="userRoles" column="user_UserAccount" select="selectUserRoleByUserAccount"/>
    </resultMap>

    <resultMap id="roleInfo" type="com.easy.base.domain.dao.RoleInfoDAO">
        <id property="id" column="ri_ID"/>
        <result property="roleCode" column="ri_RoleCode"/>
        <result property="roleName" column="ri_RoleName"/>
        <result property="valid" column="ri_Valid"/>
        <result property="createBy" column="ri_CreateBy"/>
        <result property="createDt" column="ri_CreateDt"/>
        <result property="updateBy" column="ri_UpdateBy"/>
        <result property="updateDt" column="ri_UpdateDt"/>
    </resultMap>

    <resultMap id="userRole" type="com.easy.base.domain.dao.UserRoleDAO">
        <id property="id" column="ur_ID"/>
        <result property="userAccount" column="ur_UserAccount"/>
        <result property="roleCode" column="ur_RoleCode"/>
        <result property="valid" column="ur_Valid"/>
        <result property="createBy" column="ur_CreateBy"/>
        <result property="createDt" column="ur_CreateDt"/>
        <result property="updateBy" column="ur_UpdateBy"/>
        <association property="roleInfo" column="ur_RoleCode" select="selectRoleInfoByRoleCode"/>
    </resultMap>

    <sql id="UserInfoColumn">
        <!--@sql select -->
        ID AS user_ID,
        UserName AS user_UserName,
        UserAccount AS user_UserAccount,
        Password AS user_Password,
        Valid AS user_Valid,
        CreateBy AS user_CreateBy,
        CreateDt AS user_CreateDt,
        UpdateBy AS user_UpdateBy,
        UpdateDt AS user_UpdateDt
        <!--@sql from user_info -->
    </sql>

    <sql id="RoleInfoColumn">
        <!--@sql select -->
        ID as ri_ID,
        RoleCode as ri_RoleCode,
        RoleName as ri_RoleName,
        Valid as ri_Valid,
        CreateBy as ri_CreateBy,
        CreateDt as ri_CreateDt,
        UpdateBy as ri_UpdateBy,
        UpdateDt as ri_UpdateDt
        <!--@sql from role_info -->
    </sql>

    <sql id="UserRoleColumn">
        <!--@sql select -->
        ID as ur_ID,
        UserAccount as ur_UserAccount,
        RoleCode as ur_RoleCode,
        Valid as ur_Valid,
        CreateBy as ur_CreateBy,
        CreateDt as ur_CreateDt,
        UpdateBy as ur_UpdateBy,
        UpdateDt as ur_UpdateDt
        <!--@sql from user_role -->
    </sql>

    <insert id="insertEntity">
        INSERT INTO user_info
        (
            ID,
            UserName,
            UserAccount,
            Password,
            CreateBy,
            CreateDt,
            Valid
        )
        VALUES
        (
            #{id},
            #{userName},
            #{userAccount},
            #{password},
            #{createBy},
            now(),
            #{valid}
        )
    </insert>

    <update id="updateEntity">
        UPDATE
        user_info
        <set>
            <if test="userName != null and userName != ''">
                UserName = #{userName},
            </if>
            <if test="password != null and password != ''">
                Password = #{password},
            </if>
            <if test="updateBy != null and updateBy != ''">
                UpdateBy = #{updateBy},
            </if>
            UpdateDt = now()
        </set>
        WHERE
            ID = #{id}
        AND
            Valid = 1
    </update>

    <update id="removeEntity">
        UPDATE
            user_info
        SET
            Valid = 0
        WHERE
            ID IN
        <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectEntities" resultMap="user">
        with list as (
            select
                dense_rank() over(order by UserAccount) as rn,
                <include refid="UserInfoColumn"/>
            from user_info
            <where>
                AND Valid = 1
                <if test="model.userAccount != null and model.userAccount != ''">
                    AND UserAccount = #{model.userAccount}
                </if>
                <if test="model.userName != null and model.userName != ''">
                    and UserName like '%' + #{model.userName} + '%'
                </if>
            </where>
        )

        select
            *
        from list
        where rn <![CDATA[<=]]> #{page} * #{limit}
          and rn > (#{page} - 1) * #{limit}
    </select>

    <select id="countSelect" resultType="integer">
        select
            count(1)
        from user_info
        <where>
            AND Valid = 1
            <if test="userAccount != null and userAccount != ''">
                AND UserAccount = #{userAccount}
            </if>
            <if test="userName != null and userName != ''">
                and UserName like '%' + #{userName} + '%'
            </if>
        </where>
    </select>

    <select id="selectEntityById" resultMap="user">
        select
            <include refid="UserInfoColumn"/>
        from user_info
        <where>
            AND Valid = 1
            AND UserAccount = #{account}
        </where>
    </select>

    <select id="selectRoleInfoByRoleCode" resultMap="roleInfo">
        select
            <include refid="RoleInfoColumn"/>
        from role_info
        where RoleCode = #{roleCode}
          and Valid = 1
    </select>

    <select id="selectUserRoleByUserAccount" resultMap="userRole">
        select
            <include refid="UserRoleColumn"/>
        from user_role
        where Valid = 1
          and UserAccount = #{userAccount}
    </select>
</mapper>